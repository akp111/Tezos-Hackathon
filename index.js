const conseiljs = require('conseiljs')
var express = require("express");
var app = express();
var bodyParser = require("body-parser");


app.use(bodyParser.urlencoded({extended: true}));
app.use(express.json())

conseiljs.setLogLevel('debug');
const tezosNode = 'https://testnet.tezster.tech';//Tezos node
const conseilServer={url:'https://conseil-dev.cryptonomic-infra.tech:443',apiKey:'46fca00b-1f05-42a3-8ce6-290145eb90c9',network:'carthagenet'};//Nautilus Cloud 
//Tezos demo account
const admin = {
    "mnemonic": [
      "hunt",
      "blue",
      "ostrich",
      "vote",
      "split",
      "minute",
      "lecture",
      "exclude",
      "awesome",
      "disorder",
      "movie",
      "lazy",
      "police",
      "depart",
      "van"
    ],
    "secret": "b04e2482135f93d78cf0d7d0b71399abe81f755c",
    "amount": "14692072192",
    "pkh": "tz1KmD7sRNtzQEgfUQtURnta4kHwqB1YMFaw",
    "password": "qhFTjExPBB",
    "email": "ahvlbpnk.jvcbkfvm@tezos.example.org"
  }
//JSON form of compiled smartPy script
const contract =`[
    {
      "prim": "storage",
      "args": [
        {
          "prim": "pair",
          "args": [
            {
              "prim": "pair",
              "args": [
                {
                  "prim": "pair",
                  "args": [
                    { "prim": "big_map", "args": [ { "prim": "address" }, { "prim": "string" } ], "annots": [ "%addressToName" ] },
                    { "prim": "address", "annots": [ "%admin" ] }
                  ]
                },
                {
                  "prim": "pair",
                  "args": [
                    { "prim": "string", "annots": [ "%name" ] },
                    { "prim": "big_map", "args": [ { "prim": "address" }, { "prim": "int" } ], "annots": [ "%ownerToBalance" ] }
                  ]
                }
              ]
            },
            {
              "prim": "pair",
              "args": [
                {
                  "prim": "pair",
                  "args": [
                    { "prim": "string", "annots": [ "%symbol" ] },
                    { "prim": "big_map", "args": [ { "prim": "address" }, { "prim": "set", "args": [ { "prim": "string" } ] } ], "annots": [ "%tokenHolderToID" ] }
                  ]
                },
                {
                  "prim": "pair",
                  "args": [
                    { "prim": "big_map", "args": [ { "prim": "string" }, { "prim": "int" } ], "annots": [ "%tokenIDToScore" ] },
                    {
                      "prim": "pair",
                      "args": [
                        { "prim": "big_map", "args": [ { "prim": "string" }, { "prim": "address" } ], "annots": [ "%tokenIdToOwner" ] },
                        { "prim": "set", "args": [ { "prim": "string" } ], "annots": [ "%tokensMinted" ] }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "prim": "parameter",
      "args": [
        {
          "prim": "or",
          "args": [
            { "prim": "string", "annots": [ "%burnCertificate" ] },
            {
              "prim": "pair",
              "args": [
                { "prim": "pair", "args": [ { "prim": "address", "annots": [ "%address" ] }, { "prim": "string", "annots": [ "%name" ] } ] },
                { "prim": "pair", "args": [ { "prim": "int", "annots": [ "%score" ] }, { "prim": "string", "annots": [ "%token_id" ] } ] }
              ],
              "annots": [ "%mintCertificate" ]
            }
          ]
        }
      ]
    },
    {
      "prim": "code",
      "args": [
        [
          { "prim": "DUP" },
          { "prim": "CDR" },
          { "prim": "SWAP" },
          { "prim": "CAR" },
          {
            "prim": "IF_LEFT",
            "args": [
              [
                [
                  { "prim": "SWAP" },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "CAR" },
                  { "prim": "CAR" },
                  { "prim": "CDR" },
                  { "prim": "SENDER" },
                  { "prim": "COMPARE" },
                  { "prim": "EQ" },
                  {
                    "prim": "IF",
                    "args": [
                      [ [] ],
                      [ [ { "prim": "PUSH", "args": [ { "prim": "string" }, { "string": "WrongCondition: sp.sender == self.data.admin" } ] }, { "prim": "FAILWITH" } ] ]
                    ]
                  },
                  { "prim": "SWAP" },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "CDR" },
                  { "prim": "CDR" },
                  { "prim": "CDR" },
                  { "prim": "CDR" },
                  { "prim": "SWAP" },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "MEM" },
                  {
                    "prim": "IF",
                    "args": [
                      [ [] ],
                      [
                        [
                          { "prim": "PUSH", "args": [ { "prim": "string" }, { "string": "WrongCondition: self.data.tokensMinted.contains(params.token_id)" } ] },
                          { "prim": "FAILWITH" }
                        ]
                      ]
                    ]
                  },
                  { "prim": "SWAP" },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "PUSH", "args": [ { "prim": "bool" }, { "prim": "False" } ] },
                  { "prim": "DIG", "args": [ { "int": "6" } ] },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "7" } ] },
                  { "prim": "UPDATE" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "SWAP" },
                  { "prim": "DROP" },
                  { "prim": "SWAP" },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "DUP" },
                  { "prim": "CDR" },
                  { "prim": "SWAP" },
                  { "prim": "CAR" },
                  { "prim": "NONE", "args": [ { "prim": "address" } ] },
                  { "prim": "DIG", "args": [ { "int": "6" } ] },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "7" } ] },
                  { "prim": "UPDATE" },
                  { "prim": "PAIR" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "SWAP" },
                  { "prim": "DROP" },
                  { "prim": "SWAP" },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "DUP" },
                  { "prim": "CDR" },
                  { "prim": "SWAP" },
                  { "prim": "CAR" },
                  { "prim": "NONE", "args": [ { "prim": "int" } ] },
                  { "prim": "DIG", "args": [ { "int": "5" } ] },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "6" } ] },
                  { "prim": "UPDATE" },
                  { "prim": "PAIR" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "DROP", "args": [ { "int": "2" } ] }
                ]
              ],
              [
                [
                  { "prim": "SWAP" },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "CAR" },
                  { "prim": "CAR" },
                  { "prim": "CDR" },
                  { "prim": "SENDER" },
                  { "prim": "COMPARE" },
                  { "prim": "EQ" },
                  {
                    "prim": "IF",
                    "args": [
                      [ [] ],
                      [ [ { "prim": "PUSH", "args": [ { "prim": "string" }, { "string": "WrongCondition: sp.sender == self.data.admin" } ] }, { "prim": "FAILWITH" } ] ]
                    ]
                  },
                  { "prim": "SWAP" },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "CDR" },
                  { "prim": "CDR" },
                  { "prim": "CDR" },
                  { "prim": "CDR" },
                  { "prim": "SWAP" },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "CDR" },
                  { "prim": "CDR" },
                  { "prim": "MEM" },
                  {
                    "prim": "IF",
                    "args": [
                      [
                        [
                          { "prim": "PUSH", "args": [ { "prim": "string" }, { "string": "WrongCondition: ~ (self.data.tokensMinted.contains(params.token_id))" } ] },
                          { "prim": "FAILWITH" }
                        ]
                      ],
                      [ [] ]
                    ]
                  },
                  { "prim": "SWAP" },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "PUSH", "args": [ { "prim": "bool" }, { "prim": "True" } ] },
                  { "prim": "DIG", "args": [ { "int": "6" } ] },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "7" } ] },
                  { "prim": "CDR" },
                  { "prim": "CDR" },
                  { "prim": "UPDATE" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "SWAP" },
                  { "prim": "DROP" },
                  { "prim": "SWAP" },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "CAR" },
                  { "prim": "CDR" },
                  { "prim": "CDR" },
                  { "prim": "SWAP" },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "CAR" },
                  { "prim": "CAR" },
                  { "prim": "MEM" },
                  {
                    "prim": "IF",
                    "args": [
                      [ [] ],
                      [
                        [
                          { "prim": "SWAP" },
                          { "prim": "DUP" },
                          { "prim": "DUG", "args": [ { "int": "2" } ] },
                          { "prim": "DUP" },
                          { "prim": "CAR" },
                          { "prim": "SWAP" },
                          { "prim": "CDR" },
                          { "prim": "DUP" },
                          { "prim": "CDR" },
                          { "prim": "SWAP" },
                          { "prim": "CAR" },
                          { "prim": "DUP" },
                          { "prim": "CAR" },
                          { "prim": "SWAP" },
                          { "prim": "CDR" },
                          { "prim": "PUSH", "args": [ { "prim": "option", "args": [ { "prim": "set", "args": [ { "prim": "string" } ] } ] }, { "prim": "Some", "args": [ [] ] } ] },
                          { "prim": "DIG", "args": [ { "int": "5" } ] },
                          { "prim": "DUP" },
                          { "prim": "DUG", "args": [ { "int": "6" } ] },
                          { "prim": "CAR" },
                          { "prim": "CAR" },
                          { "prim": "UPDATE" },
                          { "prim": "SWAP" },
                          { "prim": "PAIR" },
                          { "prim": "PAIR" },
                          { "prim": "SWAP" },
                          { "prim": "PAIR" },
                          { "prim": "DUG", "args": [ { "int": "2" } ] },
                          { "prim": "SWAP" },
                          { "prim": "DROP" }
                        ]
                      ]
                    ]
                  },
                  { "prim": "SWAP" },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "CAR" },
                  { "prim": "CAR" },
                  { "prim": "CAR" },
                  { "prim": "SENDER" },
                  { "prim": "MEM" },
                  {
                    "prim": "IF",
                    "args": [
                      [ [] ],
                      [
                        [
                          { "prim": "SWAP" },
                          { "prim": "DUP" },
                          { "prim": "DUG", "args": [ { "int": "2" } ] },
                          { "prim": "DUP" },
                          { "prim": "CDR" },
                          { "prim": "SWAP" },
                          { "prim": "CAR" },
                          { "prim": "DUP" },
                          { "prim": "CDR" },
                          { "prim": "SWAP" },
                          { "prim": "CAR" },
                          { "prim": "DUP" },
                          { "prim": "CDR" },
                          { "prim": "SWAP" },
                          { "prim": "CAR" },
                          { "prim": "DIG", "args": [ { "int": "4" } ] },
                          { "prim": "DUP" },
                          { "prim": "DUG", "args": [ { "int": "5" } ] },
                          { "prim": "CAR" },
                          { "prim": "CDR" },
                          { "prim": "SOME" },
                          { "prim": "SENDER" },
                          { "prim": "UPDATE" },
                          { "prim": "PAIR" },
                          { "prim": "PAIR" },
                          { "prim": "PAIR" },
                          { "prim": "DUG", "args": [ { "int": "2" } ] },
                          { "prim": "SWAP" },
                          { "prim": "DROP" }
                        ]
                      ]
                    ]
                  },
                  { "prim": "SWAP" },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "DUP" },
                  { "prim": "CDR" },
                  { "prim": "SWAP" },
                  { "prim": "CAR" },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "DUP" },
                  { "prim": "DIG", "args": [ { "int": "5" } ] },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "6" } ] },
                  { "prim": "CAR" },
                  { "prim": "CAR" },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "GET" },
                  { "prim": "IF_NONE", "args": [ [ [ { "prim": "PUSH", "args": [ { "prim": "string" }, { "string": "set_in_top-nil-some" } ] }, { "prim": "FAILWITH" } ] ], [] ] },
                  { "prim": "PUSH", "args": [ { "prim": "bool" }, { "prim": "True" } ] },
                  { "prim": "DIG", "args": [ { "int": "7" } ] },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "8" } ] },
                  { "prim": "CDR" },
                  { "prim": "CDR" },
                  { "prim": "UPDATE" },
                  { "prim": "SOME" },
                  { "prim": "SWAP" },
                  { "prim": "UPDATE" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "PAIR" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "SWAP" },
                  { "prim": "DROP" },
                  { "prim": "SWAP" },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "DUP" },
                  { "prim": "CDR" },
                  { "prim": "SWAP" },
                  { "prim": "CAR" },
                  { "prim": "DIG", "args": [ { "int": "4" } ] },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "5" } ] },
                  { "prim": "CDR" },
                  { "prim": "CAR" },
                  { "prim": "SOME" },
                  { "prim": "DIG", "args": [ { "int": "5" } ] },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "6" } ] },
                  { "prim": "CDR" },
                  { "prim": "CDR" },
                  { "prim": "UPDATE" },
                  { "prim": "PAIR" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "SWAP" },
                  { "prim": "DROP" },
                  { "prim": "SWAP" },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "DUP" },
                  { "prim": "CDR" },
                  { "prim": "SWAP" },
                  { "prim": "CAR" },
                  { "prim": "DIG", "args": [ { "int": "5" } ] },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "6" } ] },
                  { "prim": "CAR" },
                  { "prim": "CAR" },
                  { "prim": "SOME" },
                  { "prim": "DIG", "args": [ { "int": "6" } ] },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "7" } ] },
                  { "prim": "CDR" },
                  { "prim": "CDR" },
                  { "prim": "UPDATE" },
                  { "prim": "PAIR" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "SWAP" },
                  { "prim": "DROP" },
                  { "prim": "SWAP" },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "CAR" },
                  { "prim": "CDR" },
                  { "prim": "CDR" },
                  { "prim": "SWAP" },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "CAR" },
                  { "prim": "CAR" },
                  { "prim": "MEM" },
                  {
                    "prim": "IF",
                    "args": [
                      [ [] ],
                      [
                        [
                          { "prim": "SWAP" },
                          { "prim": "DUP" },
                          { "prim": "DUG", "args": [ { "int": "2" } ] },
                          { "prim": "DUP" },
                          { "prim": "CDR" },
                          { "prim": "SWAP" },
                          { "prim": "CAR" },
                          { "prim": "DUP" },
                          { "prim": "CAR" },
                          { "prim": "SWAP" },
                          { "prim": "CDR" },
                          { "prim": "DUP" },
                          { "prim": "CAR" },
                          { "prim": "SWAP" },
                          { "prim": "CDR" },
                          { "prim": "PUSH", "args": [ { "prim": "option", "args": [ { "prim": "int" } ] }, { "prim": "Some", "args": [ { "int": "0" } ] } ] },
                          { "prim": "DIG", "args": [ { "int": "5" } ] },
                          { "prim": "DUP" },
                          { "prim": "DUG", "args": [ { "int": "6" } ] },
                          { "prim": "CAR" },
                          { "prim": "CAR" },
                          { "prim": "UPDATE" },
                          { "prim": "SWAP" },
                          { "prim": "PAIR" },
                          { "prim": "SWAP" },
                          { "prim": "PAIR" },
                          { "prim": "PAIR" },
                          { "prim": "DUG", "args": [ { "int": "2" } ] },
                          { "prim": "SWAP" },
                          { "prim": "DROP" }
                        ]
                      ]
                    ]
                  },
                  { "prim": "SWAP" },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "DUP" },
                  { "prim": "CDR" },
                  { "prim": "SWAP" },
                  { "prim": "CAR" },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "DUP" },
                  { "prim": "CAR" },
                  { "prim": "SWAP" },
                  { "prim": "CDR" },
                  { "prim": "PUSH", "args": [ { "prim": "int" }, { "int": "1" } ] },
                  { "prim": "DIG", "args": [ { "int": "6" } ] },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "7" } ] },
                  { "prim": "CAR" },
                  { "prim": "CDR" },
                  { "prim": "CDR" },
                  { "prim": "DIG", "args": [ { "int": "6" } ] },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "7" } ] },
                  { "prim": "CAR" },
                  { "prim": "CAR" },
                  { "prim": "GET" },
                  { "prim": "IF_NONE", "args": [ [ [ { "prim": "PUSH", "args": [ { "prim": "string" }, { "string": "Get-item:38" } ] }, { "prim": "FAILWITH" } ] ], [] ] },
                  { "prim": "ADD" },
                  { "prim": "SOME" },
                  { "prim": "DIG", "args": [ { "int": "5" } ] },
                  { "prim": "DUP" },
                  { "prim": "DUG", "args": [ { "int": "6" } ] },
                  { "prim": "CAR" },
                  { "prim": "CAR" },
                  { "prim": "UPDATE" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "SWAP" },
                  { "prim": "PAIR" },
                  { "prim": "PAIR" },
                  { "prim": "DUG", "args": [ { "int": "2" } ] },
                  { "prim": "DROP", "args": [ { "int": "2" } ] }
                ]
              ]
            ]
          },
          { "prim": "NIL", "args": [ { "prim": "operation" } ] },
          { "prim": "PAIR" }
        ]
      ]
    }
  ]`

  const storage = `{
    "prim": "Pair",
    "args": [
      {
        "prim": "Pair",
        "args": [ { "prim": "Pair", "args": [ [], { "string": "tz1KmD7sRNtzQEgfUQtURnta4kHwqB1YMFaw" } ] }, { "prim": "Pair", "args": [ { "string": "AKPToken" }, [] ] } ]
      },
      { "prim": "Pair", "args": [ { "prim": "Pair", "args": [ { "string": "AKPT" }, [] ] }, { "prim": "Pair", "args": [ [], { "prim": "Pair", "args": [ [], [] ] } ] } ] }
    ]
  }`



//To initialize and initiate account
async function initAccount() {
    const keystore = await conseiljs.TezosWalletUtil.unlockFundraiserIdentity(admin.mnemonic.join(' '), admin.email, admin.password, admin.pkh);
    console.log(`public key: ${keystore.publicKey}`);
    console.log(`secret key: ${keystore.privateKey}`);
}

//keystore after getting public and private key from the account initiation
var keystore;

// keystore = {
//     publicKey: 'edpkvEhAwoBDM8KtojcctKyi5z8nSV3EceKKtkwMZY4qeFh3xw9dS6',
//     privateKey: 'edskRovMZvu7VMU6twFYDuSqA4TUb6tag6QM57nfiqUNfQpjGQK2wGNvaUfdRAn1jWacn5gPKqqbpcRHTc4HUG2ADGcFyH3MeU',
//     publicKeyHash: 'tz1KmD7sRNtzQEgfUQtURnta4kHwqB1YMFaw',
//     seed: '',
//     storeType: conseiljs.StoreType.Fundraiser
// };


//Function to activate account
async function activatAccount() {
   
    const result = await conseiljs.TezosNodeWriter.sendIdentityActivationOperation(tezosNode, keystore, 'b04e2482135f93d78cf0d7d0b71399abe81f755c');
    console.log(`Injected operation group id ${result.operationGroupID}`)
}
//op4DefuCE6AZbXFowtmQccnyu3AnFejV3aDzkG9259B1g2jeXXY
//activatAccount()

async function revealAccount() {
    const result = await conseiljs.TezosNodeWriter.sendKeyRevealOperation(tezosNode, keystore);
    console.log(`Injected operation group id ${result.operationGroupID}`);
}
// opRx3CTCbVh4M9oCZpWjDYJShCPwGboRkcPctimcVgrntMR6fAA
// revealAccount()

//function to deploy the script to the Tezos Blockchain
async function deployContract() {
    
const result = await conseiljs.TezosNodeWriter.sendContractOriginationOperation(tezosNode, keystore, 0, undefined, 1000000, '', 10000, 1000000, contract, storage, conseiljs.TezosParameterFormat.Micheline);
console.log(`Injected operation group id ${result.operationGroupID}`);
console.log(result)
}
//ooNR5yx3233VN7Txf8ixzepDK2qCkbhrVmvpGibLKpv6mh6jcKJ
// deployContract()
//KT1URPUuhPBLMyfvH7QYcbhQRMH99kdNS7ZF

var entryPoints
//contract address
const contractAddress = `KT1URPUuhPBLMyfvH7QYcbhQRMH99kdNS7ZF`
async function mintingCertificate(p) {//function to Issue Certificates
    //getting the entrypoints from the Michelson script of the smart contract
    
    entryPoints = await conseiljs.TezosContractIntrospector.generateEntryPointsFromCode(`parameter (or (string %burnCertificate) (pair %mintCertificate (pair (address %address) (string %name)) (pair (int %score) (string %token_id))));
    storage   (pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))));
    code
      {
        DUP;        # pair @parameter @storage : pair @parameter @storage
        CDR;        # @storage : pair @parameter @storage
        SWAP;       # pair @parameter @storage : @storage
        CAR;        # @parameter : @storage
        IF_LEFT
          {
            # Entry point: burnCertificate # @parameter%burnCertificate : @storage
            # sp.verify(sp.sender == self.data.admin) # @parameter%burnCertificate : @storage
            SWAP;       # @storage : @parameter%burnCertificate
            DUP;        # @storage : @storage : @parameter%burnCertificate
            DUG 2;      # @storage : @parameter%burnCertificate : @storage
            CAADR;      # address : @parameter%burnCertificate : @storage
            SENDER;     # address : address : @parameter%burnCertificate : @storage
            COMPARE;    # int : @parameter%burnCertificate : @storage
            EQ;         # bool : @parameter%burnCertificate : @storage
            IF
              {}
              {
                PUSH string "WrongCondition: sp.sender == self.data.admin"; # string : @parameter%burnCertificate : @storage
                FAILWITH;   # FAILED
              }; # @parameter%burnCertificate : @storage
            # sp.verify(self.data.tokensMinted.contains(params.token_id)) # @parameter%burnCertificate : @storage
            SWAP;       # @storage : @parameter%burnCertificate
            DUP;        # @storage : @storage : @parameter%burnCertificate
            DUG 2;      # @storage : @parameter%burnCertificate : @storage
            CDDDDR;     # set string : @parameter%burnCertificate : @storage
            SWAP;       # @parameter%burnCertificate : set string : @storage
            DUP;        # @parameter%burnCertificate : @parameter%burnCertificate : set string : @storage
            DUG 2;      # @parameter%burnCertificate : set string : @parameter%burnCertificate : @storage
            MEM;        # bool : @parameter%burnCertificate : @storage
            IF
              {}
              {
                PUSH string "WrongCondition: self.data.tokensMinted.contains(params.token_id)"; # string : @parameter%burnCertificate : @storage
                FAILWITH;   # FAILED
              }; # @parameter%burnCertificate : @storage
            # self.data.tokensMinted.remove(params.token_id) # @parameter%burnCertificate : @storage
            SWAP;       # @storage : @parameter%burnCertificate
            DUP;        # @storage : @storage : @parameter%burnCertificate
            DUG 2;      # @storage : @parameter%burnCertificate : @storage
            DUP;        # @storage : @storage : @parameter%burnCertificate : @storage
            CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @storage : @parameter%burnCertificate : @storage
            SWAP;       # @storage : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            CDR;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            DUP;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            CAR;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            SWAP;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            CDR;        # pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            DUP;        # pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            CAR;        # big_map string int : pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            SWAP;       # pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            CDR;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            DUP;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            CAR;        # big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            SWAP;       # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            CDR;        # set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            PUSH bool False; # bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            DIG 6;      # @parameter%burnCertificate : bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @storage
            DUP;        # @parameter%burnCertificate : @parameter%burnCertificate : bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @storage
            DUG 7;      # @parameter%burnCertificate : bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            UPDATE;     # set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            SWAP;       # big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            PAIR;       # pair (big_map string address) (set string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            SWAP;       # big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            PAIR;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            SWAP;       # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            PAIR;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
            SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%burnCertificate : @storage
            PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : @storage
            DUG 2;      # @parameter%burnCertificate : @storage : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # @storage : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DROP;       # @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            # del self.data.tokenIdToOwner[params.token_id] # @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate
            DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate
            DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDR;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAR;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDR;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAR;        # big_map string int : pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (big_map string int) (pair (big_map string address) (set string)) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDR;        # pair (big_map string address) (set string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # pair (big_map string address) (set string) : pair (big_map string address) (set string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDR;        # set string : pair (big_map string address) (set string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (big_map string address) (set string) : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAR;        # big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            NONE address; # option address : big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DIG 6;      # @parameter%burnCertificate : option address : big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # @parameter%burnCertificate : @parameter%burnCertificate : option address : big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUG 7;      # @parameter%burnCertificate : option address : big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            UPDATE;     # big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PAIR;       # pair (big_map string address) (set string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PAIR;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PAIR;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUG 2;      # @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DROP;       # @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            # del self.data.tokenIDToScore[params.token_id] # @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate
            DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate
            DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDR;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAR;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDR;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDR;        # pair (big_map string address) (set string) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAR;        # big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            NONE int;   # option int : big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DIG 5;      # @parameter%burnCertificate : option int : big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # @parameter%burnCertificate : @parameter%burnCertificate : option int : big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUG 6;      # @parameter%burnCertificate : option int : big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            UPDATE;     # big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PAIR;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PAIR;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUG 2;      # @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DROP 2;     # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          }
          {
            # Entry point: mintCertificate # @parameter%mintCertificate : @storage
            # sp.verify(sp.sender == self.data.admin) # @parameter%mintCertificate : @storage
            SWAP;       # @storage : @parameter%mintCertificate
            DUP;        # @storage : @storage : @parameter%mintCertificate
            DUG 2;      # @storage : @parameter%mintCertificate : @storage
            CAADR;      # address : @parameter%mintCertificate : @storage
            SENDER;     # address : address : @parameter%mintCertificate : @storage
            COMPARE;    # int : @parameter%mintCertificate : @storage
            EQ;         # bool : @parameter%mintCertificate : @storage
            IF
              {}
              {
                PUSH string "WrongCondition: sp.sender == self.data.admin"; # string : @parameter%mintCertificate : @storage
                FAILWITH;   # FAILED
              }; # @parameter%mintCertificate : @storage
            # sp.verify(~ (self.data.tokensMinted.contains(params.token_id))) # @parameter%mintCertificate : @storage
            SWAP;       # @storage : @parameter%mintCertificate
            DUP;        # @storage : @storage : @parameter%mintCertificate
            DUG 2;      # @storage : @parameter%mintCertificate : @storage
            CDDDDR;     # set string : @parameter%mintCertificate : @storage
            SWAP;       # @parameter%mintCertificate : set string : @storage
            DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : set string : @storage
            DUG 2;      # @parameter%mintCertificate : set string : @parameter%mintCertificate : @storage
            CDDR;       # string : set string : @parameter%mintCertificate : @storage
            MEM;        # bool : @parameter%mintCertificate : @storage
            IF
              {
                PUSH string "WrongCondition: ~ (self.data.tokensMinted.contains(params.token_id))"; # string : @parameter%mintCertificate : @storage
                FAILWITH;   # FAILED
              }
              {}; # @parameter%mintCertificate : @storage
            # self.data.tokensMinted.add(params.token_id) # @parameter%mintCertificate : @storage
            SWAP;       # @storage : @parameter%mintCertificate
            DUP;        # @storage : @storage : @parameter%mintCertificate
            DUG 2;      # @storage : @parameter%mintCertificate : @storage
            DUP;        # @storage : @storage : @parameter%mintCertificate : @storage
            CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @storage : @parameter%mintCertificate : @storage
            SWAP;       # @storage : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            CDR;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            DUP;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            CAR;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            SWAP;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            CDR;        # pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            DUP;        # pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            CAR;        # big_map string int : pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            SWAP;       # pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            CDR;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            DUP;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            CAR;        # big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            SWAP;       # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            CDR;        # set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            PUSH bool True; # bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            DIG 6;      # @parameter%mintCertificate : bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @storage
            DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @storage
            DUG 7;      # @parameter%mintCertificate : bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            CDDR;       # string : bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            UPDATE;     # set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            SWAP;       # big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            PAIR;       # pair (big_map string address) (set string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            SWAP;       # big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            PAIR;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            SWAP;       # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            PAIR;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
            SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : @storage
            PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : @storage
            DUG 2;      # @parameter%mintCertificate : @storage : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # @storage : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DROP;       # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            # if ~ (self.data.ownerToBalance.contains(params.address)): # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
            DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
            DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CADDR;      # big_map address int : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # @parameter%mintCertificate : big_map address int : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : big_map address int : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUG 2;      # @parameter%mintCertificate : big_map address int : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAAR;       # address : big_map address int : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            MEM;        # bool : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            IF
              {}
              {
                # self.data.tokenHolderToID[params.address] = sp.set([]) # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
                DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
                DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                CDR;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DUP;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                CDR;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                SWAP;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                CAR;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DUP;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                CAR;        # string : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                SWAP;       # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                CDR;        # big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                PUSH (option (set string)) (Some {}); # option (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DIG 5;      # @parameter%mintCertificate : option (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : option (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DUG 6;      # @parameter%mintCertificate : option (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                CAAR;       # address : option (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                UPDATE;     # big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                SWAP;       # string : big_map address (set string) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                PAIR;       # pair string (big_map address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                PAIR;       # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DUG 2;      # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DROP;       # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              }; # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            # if ~ (self.data.addressToName.contains(sp.sender)): # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
            DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
            DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAAAR;      # big_map address string : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SENDER;     # address : big_map address string : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            MEM;        # bool : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            IF
              {}
              {
                # self.data.addressToName[sp.sender] = params.name # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
                DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
                DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                CDR;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DUP;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                CDR;        # pair (string %name) (big_map %ownerToBalance address int) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                CAR;        # pair (big_map %addressToName address string) (address %admin) : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DUP;        # pair (big_map %addressToName address string) (address %admin) : pair (big_map %addressToName address string) (address %admin) : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                CDR;        # address : pair (big_map %addressToName address string) (address %admin) : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                SWAP;       # pair (big_map %addressToName address string) (address %admin) : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                CAR;        # big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DIG 4;      # @parameter%mintCertificate : big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DUG 5;      # @parameter%mintCertificate : big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                CADR;       # string : big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                SOME;       # option string : big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                SENDER;     # address : option string : big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                UPDATE;     # big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                PAIR;       # pair (big_map address string) address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                PAIR;       # pair (pair (big_map address string) address) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                PAIR;       # pair (pair (pair (big_map address string) address) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DUG 2;      # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map address string) address) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map address string) address) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DROP;       # @parameter%mintCertificate : pair (pair (pair (big_map address string) address) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              }; # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            # self.data.tokenHolderToID[params.address].add(params.token_id) # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
            DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
            DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDR;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDR;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAR;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAR;        # string : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDR;        # big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # big_map address (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DIG 5;      # @parameter%mintCertificate : big_map address (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : big_map address (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUG 6;      # @parameter%mintCertificate : big_map address (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAAR;       # address : big_map address (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # address : address : big_map address (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUG 2;      # address : big_map address (set string) : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            GET;        # option (set string) : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            IF_SOME
              {
                # of_some: set_in_top-nil-some # @some : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              }
              {
                PUSH string "set_in_top-nil-some"; # string : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                FAILWITH;   # FAILED
              }; # @some : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PUSH bool True; # bool : @some : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DIG 7;      # @parameter%mintCertificate : bool : @some : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : bool : @some : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUG 8;      # @parameter%mintCertificate : bool : @some : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDDR;       # string : bool : @some : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            UPDATE;     # set string : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SOME;       # option (set string) : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # address : option (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            UPDATE;     # big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # string : big_map address (set string) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PAIR;       # pair string (big_map address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PAIR;       # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUG 2;      # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DROP;       # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            # self.data.tokenIDToScore[params.token_id] = params.score # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
            DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
            DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDR;        # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAR;        # pair string (big_map address (set string)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDR;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDR;        # pair (big_map string address) (set string) : pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAR;        # big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DIG 4;      # @parameter%mintCertificate : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUG 5;      # @parameter%mintCertificate : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDAR;       # int : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SOME;       # option int : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DIG 5;      # @parameter%mintCertificate : option int : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : option int : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUG 6;      # @parameter%mintCertificate : option int : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDDR;       # string : option int : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            UPDATE;     # big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PAIR;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair string (big_map address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PAIR;       # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUG 2;      # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DROP;       # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            # self.data.tokenIdToOwner[params.token_id] = params.address # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
            DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
            DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDR;        # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAR;        # pair string (big_map address (set string)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDR;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAR;        # big_map string int : pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (big_map string int) (pair (big_map string address) (set string)) : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDR;        # pair (big_map string address) (set string) : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # pair (big_map string address) (set string) : pair (big_map string address) (set string) : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDR;        # set string : pair (big_map string address) (set string) : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (big_map string address) (set string) : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAR;        # big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DIG 5;      # @parameter%mintCertificate : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUG 6;      # @parameter%mintCertificate : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAAR;       # address : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SOME;       # option address : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DIG 6;      # @parameter%mintCertificate : option address : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : option address : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUG 7;      # @parameter%mintCertificate : option address : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDDR;       # string : option address : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            UPDATE;     # big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PAIR;       # pair (big_map string address) (set string) : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PAIR;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair string (big_map address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PAIR;       # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUG 2;      # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DROP;       # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            # if ~ (self.data.ownerToBalance.contains(params.address)): # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
            DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
            DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CADDR;      # big_map address int : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # @parameter%mintCertificate : big_map address int : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : big_map address int : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUG 2;      # @parameter%mintCertificate : big_map address int : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAAR;       # address : big_map address int : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            MEM;        # bool : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            IF
              {}
              {
                # self.data.ownerToBalance[params.address] = 0 # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
                DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
                DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                CDR;        # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DUP;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                CAR;        # pair (big_map %addressToName address string) (address %admin) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                CDR;        # pair (string %name) (big_map %ownerToBalance address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DUP;        # pair (string %name) (big_map %ownerToBalance address int) : pair (string %name) (big_map %ownerToBalance address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                CAR;        # string : pair (string %name) (big_map %ownerToBalance address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                SWAP;       # pair (string %name) (big_map %ownerToBalance address int) : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                CDR;        # big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                PUSH (option int) (Some 0); # option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DIG 5;      # @parameter%mintCertificate : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DUG 6;      # @parameter%mintCertificate : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                CAAR;       # address : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                UPDATE;     # big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                SWAP;       # string : big_map address int : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                PAIR;       # pair string (big_map address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                SWAP;       # pair (big_map %addressToName address string) (address %admin) : pair string (big_map address int) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                PAIR;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DUG 2;      # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                DROP;       # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              }; # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            # self.data.ownerToBalance[params.address] += 1 # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
            DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
            DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDR;        # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAR;        # pair (big_map %addressToName address string) (address %admin) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDR;        # pair (string %name) (big_map %ownerToBalance address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # pair (string %name) (big_map %ownerToBalance address int) : pair (string %name) (big_map %ownerToBalance address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAR;        # string : pair (string %name) (big_map %ownerToBalance address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (string %name) (big_map %ownerToBalance address int) : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CDR;        # big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PUSH int 1; # int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DIG 6;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate
            DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate
            DUG 7;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CADDR;      # big_map address int : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DIG 6;      # @parameter%mintCertificate : big_map address int : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : big_map address int : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUG 7;      # @parameter%mintCertificate : big_map address int : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAAR;       # address : big_map address int : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            GET;        # option int : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            IF_SOME
              {
                # of_some: Get-item:38 # @some : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              }
              {
                PUSH string "Get-item:38"; # string : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
                FAILWITH;   # FAILED
              }; # @some : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            ADD;        # int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SOME;       # option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DIG 5;      # @parameter%mintCertificate : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUG 6;      # @parameter%mintCertificate : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            CAAR;       # address : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            UPDATE;     # big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # string : big_map address int : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PAIR;       # pair string (big_map address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            SWAP;       # pair (big_map %addressToName address string) (address %admin) : pair string (big_map address int) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PAIR;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DUG 2;      # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            DROP 2;     # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          }; # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
        NIL operation; # list operation : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
        PAIR;       # pair (list operation) (pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))))
      } # pair (list operation) (pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))));
    
    `)
    console.log(entryPoints)
    console.log(entryPoints[1].parameters)
    keystore={
      publicKey:p.public_key,
      privatekey:p.private_key,
      publicKeyHash:p.public_hash,
      seed: '',
      storeType: conseiljs.StoreType.Fundraiser
    }
      // Use the mintingCertificate functions to issue a NFT based certificate
     //console.log('(Right'+entryPoints[1].generateInvocationPair(['tz1KmD7sRNtzQEgfUQtURnta4kHwqB1YMFaw'],"Ashis",10,"Ashis-Quiz-20").parameters+')')
     console.log('(Right '+[`\'"${p.public_hash}"\'`],`\'"${p.name}"\'`,p.score,`\'"${p.name}-Quiz-${p.score}"\'`+')')
     const result = await conseiljs.TezosNodeWriter.sendContractInvocationOperation(tezosNode, keystore, contractAddress,
             100000, 1000000, '', 10000, 1000000, entryPoints[1].generateInvocationString([`"${p.public_hash}"`],`"${p.name}"`,p.score,`"${p.name}-Quiz-${p.score}"`).entrypoint,
                 '(Right '+entryPoints[1].generateInvocationPair([`"${p.public_hash}"`],`"${p.name}"`,p.score,`"${p.name}-Quiz-${p.score}"`).parameters+')',
                 conseiljs.TezosParameterFormat.Michelson);
    console.log(`Injected operation group id ${result.operationGroupID}`);
    
    

  //  const result = await conseiljs.TezosConseilClient.getBigMapData(conseilServer,contractAddress)
  //  console.log(result.maps[1])

}
async function VerifyCertificate(token) {
    //getting the entrypoints from the Michelson script of the smart contract
  entryPoints = await conseiljs.TezosContractIntrospector.generateEntryPointsFromCode(`parameter (or (string %burnCertificate) (pair %mintCertificate (pair (address %address) (string %name)) (pair (int %score) (string %token_id))));
  storage   (pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))));
  code
    {
      DUP;        # pair @parameter @storage : pair @parameter @storage
      CDR;        # @storage : pair @parameter @storage
      SWAP;       # pair @parameter @storage : @storage
      CAR;        # @parameter : @storage
      IF_LEFT
        {
          # Entry point: burnCertificate # @parameter%burnCertificate : @storage
          # sp.verify(sp.sender == self.data.admin) # @parameter%burnCertificate : @storage
          SWAP;       # @storage : @parameter%burnCertificate
          DUP;        # @storage : @storage : @parameter%burnCertificate
          DUG 2;      # @storage : @parameter%burnCertificate : @storage
          CAADR;      # address : @parameter%burnCertificate : @storage
          SENDER;     # address : address : @parameter%burnCertificate : @storage
          COMPARE;    # int : @parameter%burnCertificate : @storage
          EQ;         # bool : @parameter%burnCertificate : @storage
          IF
            {}
            {
              PUSH string "WrongCondition: sp.sender == self.data.admin"; # string : @parameter%burnCertificate : @storage
              FAILWITH;   # FAILED
            }; # @parameter%burnCertificate : @storage
          # sp.verify(self.data.tokensMinted.contains(params.token_id)) # @parameter%burnCertificate : @storage
          SWAP;       # @storage : @parameter%burnCertificate
          DUP;        # @storage : @storage : @parameter%burnCertificate
          DUG 2;      # @storage : @parameter%burnCertificate : @storage
          CDDDDR;     # set string : @parameter%burnCertificate : @storage
          SWAP;       # @parameter%burnCertificate : set string : @storage
          DUP;        # @parameter%burnCertificate : @parameter%burnCertificate : set string : @storage
          DUG 2;      # @parameter%burnCertificate : set string : @parameter%burnCertificate : @storage
          MEM;        # bool : @parameter%burnCertificate : @storage
          IF
            {}
            {
              PUSH string "WrongCondition: self.data.tokensMinted.contains(params.token_id)"; # string : @parameter%burnCertificate : @storage
              FAILWITH;   # FAILED
            }; # @parameter%burnCertificate : @storage
          # self.data.tokensMinted.remove(params.token_id) # @parameter%burnCertificate : @storage
          SWAP;       # @storage : @parameter%burnCertificate
          DUP;        # @storage : @storage : @parameter%burnCertificate
          DUG 2;      # @storage : @parameter%burnCertificate : @storage
          DUP;        # @storage : @storage : @parameter%burnCertificate : @storage
          CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @storage : @parameter%burnCertificate : @storage
          SWAP;       # @storage : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          CDR;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          DUP;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          CAR;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          SWAP;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          CDR;        # pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          DUP;        # pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          CAR;        # big_map string int : pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          SWAP;       # pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          CDR;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          DUP;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          CAR;        # big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          SWAP;       # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          CDR;        # set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          PUSH bool False; # bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          DIG 6;      # @parameter%burnCertificate : bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @storage
          DUP;        # @parameter%burnCertificate : @parameter%burnCertificate : bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @storage
          DUG 7;      # @parameter%burnCertificate : bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          UPDATE;     # set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          SWAP;       # big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          PAIR;       # pair (big_map string address) (set string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          SWAP;       # big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          PAIR;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          SWAP;       # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          PAIR;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%burnCertificate : @storage
          PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : @storage
          DUG 2;      # @parameter%burnCertificate : @storage : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # @storage : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DROP;       # @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          # del self.data.tokenIdToOwner[params.token_id] # @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate
          DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # big_map string int : pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (big_map string int) (pair (big_map string address) (set string)) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (big_map string address) (set string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (big_map string address) (set string) : pair (big_map string address) (set string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # set string : pair (big_map string address) (set string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (big_map string address) (set string) : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          NONE address; # option address : big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 6;      # @parameter%burnCertificate : option address : big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%burnCertificate : @parameter%burnCertificate : option address : big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 7;      # @parameter%burnCertificate : option address : big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          UPDATE;     # big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (big_map string address) (set string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 2;      # @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DROP;       # @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          # del self.data.tokenIDToScore[params.token_id] # @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate
          DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (big_map string address) (set string) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          NONE int;   # option int : big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 5;      # @parameter%burnCertificate : option int : big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%burnCertificate : @parameter%burnCertificate : option int : big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 6;      # @parameter%burnCertificate : option int : big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          UPDATE;     # big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 2;      # @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DROP 2;     # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
        }
        {
          # Entry point: mintCertificate # @parameter%mintCertificate : @storage
          # sp.verify(sp.sender == self.data.admin) # @parameter%mintCertificate : @storage
          SWAP;       # @storage : @parameter%mintCertificate
          DUP;        # @storage : @storage : @parameter%mintCertificate
          DUG 2;      # @storage : @parameter%mintCertificate : @storage
          CAADR;      # address : @parameter%mintCertificate : @storage
          SENDER;     # address : address : @parameter%mintCertificate : @storage
          COMPARE;    # int : @parameter%mintCertificate : @storage
          EQ;         # bool : @parameter%mintCertificate : @storage
          IF
            {}
            {
              PUSH string "WrongCondition: sp.sender == self.data.admin"; # string : @parameter%mintCertificate : @storage
              FAILWITH;   # FAILED
            }; # @parameter%mintCertificate : @storage
          # sp.verify(~ (self.data.tokensMinted.contains(params.token_id))) # @parameter%mintCertificate : @storage
          SWAP;       # @storage : @parameter%mintCertificate
          DUP;        # @storage : @storage : @parameter%mintCertificate
          DUG 2;      # @storage : @parameter%mintCertificate : @storage
          CDDDDR;     # set string : @parameter%mintCertificate : @storage
          SWAP;       # @parameter%mintCertificate : set string : @storage
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : set string : @storage
          DUG 2;      # @parameter%mintCertificate : set string : @parameter%mintCertificate : @storage
          CDDR;       # string : set string : @parameter%mintCertificate : @storage
          MEM;        # bool : @parameter%mintCertificate : @storage
          IF
            {
              PUSH string "WrongCondition: ~ (self.data.tokensMinted.contains(params.token_id))"; # string : @parameter%mintCertificate : @storage
              FAILWITH;   # FAILED
            }
            {}; # @parameter%mintCertificate : @storage
          # self.data.tokensMinted.add(params.token_id) # @parameter%mintCertificate : @storage
          SWAP;       # @storage : @parameter%mintCertificate
          DUP;        # @storage : @storage : @parameter%mintCertificate
          DUG 2;      # @storage : @parameter%mintCertificate : @storage
          DUP;        # @storage : @storage : @parameter%mintCertificate : @storage
          CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @storage : @parameter%mintCertificate : @storage
          SWAP;       # @storage : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          CDR;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          DUP;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          CAR;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          SWAP;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          CDR;        # pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          DUP;        # pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          CAR;        # big_map string int : pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          SWAP;       # pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          CDR;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          DUP;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          CAR;        # big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          SWAP;       # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          CDR;        # set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          PUSH bool True; # bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          DIG 6;      # @parameter%mintCertificate : bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @storage
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @storage
          DUG 7;      # @parameter%mintCertificate : bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          CDDR;       # string : bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          UPDATE;     # set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          SWAP;       # big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          PAIR;       # pair (big_map string address) (set string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          SWAP;       # big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          PAIR;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          SWAP;       # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          PAIR;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : @storage
          PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : @storage
          DUG 2;      # @parameter%mintCertificate : @storage : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # @storage : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DROP;       # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          # if ~ (self.data.ownerToBalance.contains(params.address)): # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CADDR;      # big_map address int : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # @parameter%mintCertificate : big_map address int : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : big_map address int : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 2;      # @parameter%mintCertificate : big_map address int : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAAR;       # address : big_map address int : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          MEM;        # bool : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          IF
            {}
            {
              # self.data.tokenHolderToID[params.address] = sp.set([]) # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
              DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
              DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CDR;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CDR;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAR;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAR;        # string : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CDR;        # big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PUSH (option (set string)) (Some {}); # option (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DIG 5;      # @parameter%mintCertificate : option (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : option (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUG 6;      # @parameter%mintCertificate : option (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAAR;       # address : option (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              UPDATE;     # big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # string : big_map address (set string) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PAIR;       # pair string (big_map address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PAIR;       # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUG 2;      # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DROP;       # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            }; # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          # if ~ (self.data.addressToName.contains(sp.sender)): # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAAAR;      # big_map address string : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SENDER;     # address : big_map address string : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          MEM;        # bool : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          IF
            {}
            {
              # self.data.addressToName[sp.sender] = params.name # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
              DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
              DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CDR;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CDR;        # pair (string %name) (big_map %ownerToBalance address int) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAR;        # pair (big_map %addressToName address string) (address %admin) : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # pair (big_map %addressToName address string) (address %admin) : pair (big_map %addressToName address string) (address %admin) : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CDR;        # address : pair (big_map %addressToName address string) (address %admin) : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (big_map %addressToName address string) (address %admin) : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAR;        # big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DIG 4;      # @parameter%mintCertificate : big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUG 5;      # @parameter%mintCertificate : big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CADR;       # string : big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SOME;       # option string : big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SENDER;     # address : option string : big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              UPDATE;     # big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PAIR;       # pair (big_map address string) address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PAIR;       # pair (pair (big_map address string) address) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PAIR;       # pair (pair (pair (big_map address string) address) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUG 2;      # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map address string) address) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map address string) address) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DROP;       # @parameter%mintCertificate : pair (pair (pair (big_map address string) address) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            }; # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          # self.data.tokenHolderToID[params.address].add(params.token_id) # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # string : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # big_map address (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 5;      # @parameter%mintCertificate : big_map address (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : big_map address (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 6;      # @parameter%mintCertificate : big_map address (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAAR;       # address : big_map address (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # address : address : big_map address (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 2;      # address : big_map address (set string) : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          GET;        # option (set string) : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          IF_SOME
            {
              # of_some: set_in_top-nil-some # @some : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            }
            {
              PUSH string "set_in_top-nil-some"; # string : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              FAILWITH;   # FAILED
            }; # @some : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PUSH bool True; # bool : @some : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 7;      # @parameter%mintCertificate : bool : @some : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : bool : @some : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 8;      # @parameter%mintCertificate : bool : @some : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDDR;       # string : bool : @some : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          UPDATE;     # set string : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SOME;       # option (set string) : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # address : option (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          UPDATE;     # big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # string : big_map address (set string) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair string (big_map address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 2;      # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DROP;       # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          # self.data.tokenIDToScore[params.token_id] = params.score # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair string (big_map address (set string)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (big_map string address) (set string) : pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 4;      # @parameter%mintCertificate : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 5;      # @parameter%mintCertificate : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDAR;       # int : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SOME;       # option int : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 5;      # @parameter%mintCertificate : option int : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : option int : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 6;      # @parameter%mintCertificate : option int : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDDR;       # string : option int : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          UPDATE;     # big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair string (big_map address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 2;      # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DROP;       # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          # self.data.tokenIdToOwner[params.token_id] = params.address # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair string (big_map address (set string)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # big_map string int : pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (big_map string int) (pair (big_map string address) (set string)) : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (big_map string address) (set string) : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (big_map string address) (set string) : pair (big_map string address) (set string) : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # set string : pair (big_map string address) (set string) : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (big_map string address) (set string) : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 5;      # @parameter%mintCertificate : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 6;      # @parameter%mintCertificate : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAAR;       # address : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SOME;       # option address : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 6;      # @parameter%mintCertificate : option address : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : option address : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 7;      # @parameter%mintCertificate : option address : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDDR;       # string : option address : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          UPDATE;     # big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (big_map string address) (set string) : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair string (big_map address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 2;      # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DROP;       # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          # if ~ (self.data.ownerToBalance.contains(params.address)): # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CADDR;      # big_map address int : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # @parameter%mintCertificate : big_map address int : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : big_map address int : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 2;      # @parameter%mintCertificate : big_map address int : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAAR;       # address : big_map address int : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          MEM;        # bool : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          IF
            {}
            {
              # self.data.ownerToBalance[params.address] = 0 # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
              DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
              DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CDR;        # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAR;        # pair (big_map %addressToName address string) (address %admin) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CDR;        # pair (string %name) (big_map %ownerToBalance address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # pair (string %name) (big_map %ownerToBalance address int) : pair (string %name) (big_map %ownerToBalance address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAR;        # string : pair (string %name) (big_map %ownerToBalance address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (string %name) (big_map %ownerToBalance address int) : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CDR;        # big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PUSH (option int) (Some 0); # option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DIG 5;      # @parameter%mintCertificate : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUG 6;      # @parameter%mintCertificate : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAAR;       # address : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              UPDATE;     # big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # string : big_map address int : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PAIR;       # pair string (big_map address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (big_map %addressToName address string) (address %admin) : pair string (big_map address int) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PAIR;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUG 2;      # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DROP;       # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            }; # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          # self.data.ownerToBalance[params.address] += 1 # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair (big_map %addressToName address string) (address %admin) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (string %name) (big_map %ownerToBalance address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (string %name) (big_map %ownerToBalance address int) : pair (string %name) (big_map %ownerToBalance address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # string : pair (string %name) (big_map %ownerToBalance address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (string %name) (big_map %ownerToBalance address int) : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PUSH int 1; # int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 6;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate
          DUG 7;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CADDR;      # big_map address int : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 6;      # @parameter%mintCertificate : big_map address int : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : big_map address int : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 7;      # @parameter%mintCertificate : big_map address int : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAAR;       # address : big_map address int : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          GET;        # option int : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          IF_SOME
            {
              # of_some: Get-item:38 # @some : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            }
            {
              PUSH string "Get-item:38"; # string : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              FAILWITH;   # FAILED
            }; # @some : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          ADD;        # int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SOME;       # option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 5;      # @parameter%mintCertificate : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 6;      # @parameter%mintCertificate : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAAR;       # address : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          UPDATE;     # big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # string : big_map address int : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair string (big_map address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (big_map %addressToName address string) (address %admin) : pair string (big_map address int) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 2;      # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DROP 2;     # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
        }; # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
      NIL operation; # list operation : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
      PAIR;       # pair (list operation) (pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))))
    } # pair (list operation) (pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))));
  
  `)
//Showing the big_map key value pair
console.log(`"\\"${token}\\""`)
  const result = await conseiljs.TezosConseilClient.getBigMapData(conseilServer,contractAddress)
  //show the NFT token and score
     var val=0;
  result.maps[3].content.forEach((p)=>{
    // console.log(`"\\"${token}\\""`)
   if(p.key==`"\\"${token}\\""`)
   { 
    val = p.value
    }
})

if(val!==0)
return val
else
return "not found"

  //show the token and the associated address with it
  // console.log(result.maps[4])
  // //address to name
  // console.log(result.maps[0])
  // //address to number of tokens
  // console.log(result.maps[1])
  // //address to tokens
  // console.log(result.maps[2])
}

async function deleteCertificate(p) {
    //getting the entrypoints from the Michelson script of the smart contract
  entryPoints = await conseiljs.TezosContractIntrospector.generateEntryPointsFromCode(`parameter (or (string %burnCertificate) (pair %mintCertificate (pair (address %address) (string %name)) (pair (int %score) (string %token_id))));
  storage   (pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)))));
  code
    {
      DUP;        # pair @parameter @storage : pair @parameter @storage
      CDR;        # @storage : pair @parameter @storage
      SWAP;       # pair @parameter @storage : @storage
      CAR;        # @parameter : @storage
      IF_LEFT
        {
          # Entry point: burnCertificate # @parameter%burnCertificate : @storage
          # sp.verify(sp.sender == self.data.admin) # @parameter%burnCertificate : @storage
          SWAP;       # @storage : @parameter%burnCertificate
          DUP;        # @storage : @storage : @parameter%burnCertificate
          DUG 2;      # @storage : @parameter%burnCertificate : @storage
          CAADR;      # address : @parameter%burnCertificate : @storage
          SENDER;     # address : address : @parameter%burnCertificate : @storage
          COMPARE;    # int : @parameter%burnCertificate : @storage
          EQ;         # bool : @parameter%burnCertificate : @storage
          IF
            {}
            {
              PUSH string "WrongCondition: sp.sender == self.data.admin"; # string : @parameter%burnCertificate : @storage
              FAILWITH;   # FAILED
            }; # @parameter%burnCertificate : @storage
          # sp.verify(self.data.tokensMinted.contains(params.token_id)) # @parameter%burnCertificate : @storage
          SWAP;       # @storage : @parameter%burnCertificate
          DUP;        # @storage : @storage : @parameter%burnCertificate
          DUG 2;      # @storage : @parameter%burnCertificate : @storage
          CDDDDR;     # set string : @parameter%burnCertificate : @storage
          SWAP;       # @parameter%burnCertificate : set string : @storage
          DUP;        # @parameter%burnCertificate : @parameter%burnCertificate : set string : @storage
          DUG 2;      # @parameter%burnCertificate : set string : @parameter%burnCertificate : @storage
          MEM;        # bool : @parameter%burnCertificate : @storage
          IF
            {}
            {
              PUSH string "WrongCondition: self.data.tokensMinted.contains(params.token_id)"; # string : @parameter%burnCertificate : @storage
              FAILWITH;   # FAILED
            }; # @parameter%burnCertificate : @storage
          # self.data.tokensMinted.remove(params.token_id) # @parameter%burnCertificate : @storage
          SWAP;       # @storage : @parameter%burnCertificate
          DUP;        # @storage : @storage : @parameter%burnCertificate
          DUG 2;      # @storage : @parameter%burnCertificate : @storage
          DUP;        # @storage : @storage : @parameter%burnCertificate : @storage
          CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @storage : @parameter%burnCertificate : @storage
          SWAP;       # @storage : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          CDR;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          DUP;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          CAR;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          SWAP;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          CDR;        # pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          DUP;        # pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          CAR;        # big_map string int : pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          SWAP;       # pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          CDR;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          DUP;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          CAR;        # big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          SWAP;       # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          CDR;        # set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          PUSH bool False; # bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          DIG 6;      # @parameter%burnCertificate : bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @storage
          DUP;        # @parameter%burnCertificate : @parameter%burnCertificate : bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @storage
          DUG 7;      # @parameter%burnCertificate : bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          UPDATE;     # set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          SWAP;       # big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          PAIR;       # pair (big_map string address) (set string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          SWAP;       # big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          PAIR;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          SWAP;       # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          PAIR;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : @storage
          SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%burnCertificate : @storage
          PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : @storage
          DUG 2;      # @parameter%burnCertificate : @storage : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # @storage : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DROP;       # @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          # del self.data.tokenIdToOwner[params.token_id] # @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate
          DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # big_map string int : pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (big_map string int) (pair (big_map string address) (set string)) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (big_map string address) (set string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (big_map string address) (set string) : pair (big_map string address) (set string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # set string : pair (big_map string address) (set string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (big_map string address) (set string) : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          NONE address; # option address : big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 6;      # @parameter%burnCertificate : option address : big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%burnCertificate : @parameter%burnCertificate : option address : big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 7;      # @parameter%burnCertificate : option address : big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          UPDATE;     # big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (big_map string address) (set string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 2;      # @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DROP;       # @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          # del self.data.tokenIDToScore[params.token_id] # @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate
          DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (big_map string address) (set string) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          NONE int;   # option int : big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 5;      # @parameter%burnCertificate : option int : big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%burnCertificate : @parameter%burnCertificate : option int : big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 6;      # @parameter%burnCertificate : option int : big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          UPDATE;     # big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 2;      # @parameter%burnCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DROP 2;     # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
        }
        {
          # Entry point: mintCertificate # @parameter%mintCertificate : @storage
          # sp.verify(sp.sender == self.data.admin) # @parameter%mintCertificate : @storage
          SWAP;       # @storage : @parameter%mintCertificate
          DUP;        # @storage : @storage : @parameter%mintCertificate
          DUG 2;      # @storage : @parameter%mintCertificate : @storage
          CAADR;      # address : @parameter%mintCertificate : @storage
          SENDER;     # address : address : @parameter%mintCertificate : @storage
          COMPARE;    # int : @parameter%mintCertificate : @storage
          EQ;         # bool : @parameter%mintCertificate : @storage
          IF
            {}
            {
              PUSH string "WrongCondition: sp.sender == self.data.admin"; # string : @parameter%mintCertificate : @storage
              FAILWITH;   # FAILED
            }; # @parameter%mintCertificate : @storage
          # sp.verify(~ (self.data.tokensMinted.contains(params.token_id))) # @parameter%mintCertificate : @storage
          SWAP;       # @storage : @parameter%mintCertificate
          DUP;        # @storage : @storage : @parameter%mintCertificate
          DUG 2;      # @storage : @parameter%mintCertificate : @storage
          CDDDDR;     # set string : @parameter%mintCertificate : @storage
          SWAP;       # @parameter%mintCertificate : set string : @storage
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : set string : @storage
          DUG 2;      # @parameter%mintCertificate : set string : @parameter%mintCertificate : @storage
          CDDR;       # string : set string : @parameter%mintCertificate : @storage
          MEM;        # bool : @parameter%mintCertificate : @storage
          IF
            {
              PUSH string "WrongCondition: ~ (self.data.tokensMinted.contains(params.token_id))"; # string : @parameter%mintCertificate : @storage
              FAILWITH;   # FAILED
            }
            {}; # @parameter%mintCertificate : @storage
          # self.data.tokensMinted.add(params.token_id) # @parameter%mintCertificate : @storage
          SWAP;       # @storage : @parameter%mintCertificate
          DUP;        # @storage : @storage : @parameter%mintCertificate
          DUG 2;      # @storage : @parameter%mintCertificate : @storage
          DUP;        # @storage : @storage : @parameter%mintCertificate : @storage
          CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @storage : @parameter%mintCertificate : @storage
          SWAP;       # @storage : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          CDR;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          DUP;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          CAR;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          SWAP;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string))) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          CDR;        # pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          DUP;        # pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          CAR;        # big_map string int : pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          SWAP;       # pair (big_map %tokenIDToScore string int) (pair (big_map %tokenIdToOwner string address) (set %tokensMinted string)) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          CDR;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          DUP;        # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          CAR;        # big_map string address : pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          SWAP;       # pair (big_map %tokenIdToOwner string address) (set %tokensMinted string) : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          CDR;        # set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          PUSH bool True; # bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          DIG 6;      # @parameter%mintCertificate : bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @storage
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @storage
          DUG 7;      # @parameter%mintCertificate : bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          CDDR;       # string : bool : set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          UPDATE;     # set string : big_map string address : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          SWAP;       # big_map string address : set string : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          PAIR;       # pair (big_map string address) (set string) : big_map string int : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          SWAP;       # big_map string int : pair (big_map string address) (set string) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          PAIR;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          SWAP;       # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          PAIR;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : @storage
          SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : @storage
          PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : @storage
          DUG 2;      # @parameter%mintCertificate : @storage : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # @storage : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DROP;       # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          # if ~ (self.data.ownerToBalance.contains(params.address)): # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CADDR;      # big_map address int : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # @parameter%mintCertificate : big_map address int : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : big_map address int : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 2;      # @parameter%mintCertificate : big_map address int : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAAR;       # address : big_map address int : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          MEM;        # bool : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          IF
            {}
            {
              # self.data.tokenHolderToID[params.address] = sp.set([]) # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
              DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
              DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CDR;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CDR;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAR;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAR;        # string : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CDR;        # big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PUSH (option (set string)) (Some {}); # option (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DIG 5;      # @parameter%mintCertificate : option (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : option (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUG 6;      # @parameter%mintCertificate : option (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAAR;       # address : option (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              UPDATE;     # big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # string : big_map address (set string) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PAIR;       # pair string (big_map address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PAIR;       # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUG 2;      # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DROP;       # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            }; # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          # if ~ (self.data.addressToName.contains(sp.sender)): # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAAAR;      # big_map address string : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SENDER;     # address : big_map address string : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          MEM;        # bool : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          IF
            {}
            {
              # self.data.addressToName[sp.sender] = params.name # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
              DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
              DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CDR;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CDR;        # pair (string %name) (big_map %ownerToBalance address int) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAR;        # pair (big_map %addressToName address string) (address %admin) : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # pair (big_map %addressToName address string) (address %admin) : pair (big_map %addressToName address string) (address %admin) : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CDR;        # address : pair (big_map %addressToName address string) (address %admin) : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (big_map %addressToName address string) (address %admin) : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAR;        # big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DIG 4;      # @parameter%mintCertificate : big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUG 5;      # @parameter%mintCertificate : big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CADR;       # string : big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SOME;       # option string : big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SENDER;     # address : option string : big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              UPDATE;     # big_map address string : address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PAIR;       # pair (big_map address string) address : pair (string %name) (big_map %ownerToBalance address int) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PAIR;       # pair (pair (big_map address string) address) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PAIR;       # pair (pair (pair (big_map address string) address) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUG 2;      # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map address string) address) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map address string) address) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DROP;       # @parameter%mintCertificate : pair (pair (pair (big_map address string) address) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            }; # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          # self.data.tokenHolderToID[params.address].add(params.token_id) # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # string : pair (string %symbol) (big_map %tokenHolderToID address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (string %symbol) (big_map %tokenHolderToID address (set string)) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # big_map address (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 5;      # @parameter%mintCertificate : big_map address (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : big_map address (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 6;      # @parameter%mintCertificate : big_map address (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAAR;       # address : big_map address (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # address : address : big_map address (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 2;      # address : big_map address (set string) : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          GET;        # option (set string) : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          IF_SOME
            {
              # of_some: set_in_top-nil-some # @some : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            }
            {
              PUSH string "set_in_top-nil-some"; # string : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              FAILWITH;   # FAILED
            }; # @some : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PUSH bool True; # bool : @some : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 7;      # @parameter%mintCertificate : bool : @some : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : bool : @some : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 8;      # @parameter%mintCertificate : bool : @some : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDDR;       # string : bool : @some : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          UPDATE;     # set string : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SOME;       # option (set string) : address : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # address : option (set string) : big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          UPDATE;     # big_map address (set string) : string : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # string : big_map address (set string) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair string (big_map address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 2;      # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DROP;       # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          # self.data.tokenIDToScore[params.token_id] = params.score # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair string (big_map address (set string)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (big_map string address) (set string) : pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 4;      # @parameter%mintCertificate : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 5;      # @parameter%mintCertificate : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDAR;       # int : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SOME;       # option int : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 5;      # @parameter%mintCertificate : option int : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : option int : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 6;      # @parameter%mintCertificate : option int : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDDR;       # string : option int : big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          UPDATE;     # big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair string (big_map address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 2;      # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DROP;       # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          # self.data.tokenIdToOwner[params.token_id] = params.address # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair string (big_map address (set string)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (big_map string int) (pair (big_map string address) (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # big_map string int : pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (big_map string int) (pair (big_map string address) (set string)) : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (big_map string address) (set string) : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (big_map string address) (set string) : pair (big_map string address) (set string) : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # set string : pair (big_map string address) (set string) : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (big_map string address) (set string) : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 5;      # @parameter%mintCertificate : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 6;      # @parameter%mintCertificate : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAAR;       # address : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SOME;       # option address : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 6;      # @parameter%mintCertificate : option address : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : option address : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 7;      # @parameter%mintCertificate : option address : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDDR;       # string : option address : big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          UPDATE;     # big_map string address : set string : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (big_map string address) (set string) : big_map string int : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # big_map string int : pair (big_map string address) (set string) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (big_map string int) (pair (big_map string address) (set string)) : pair string (big_map address (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair string (big_map address (set string)) : pair (big_map string int) (pair (big_map string address) (set string)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 2;      # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DROP;       # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          # if ~ (self.data.ownerToBalance.contains(params.address)): # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CADDR;      # big_map address int : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # @parameter%mintCertificate : big_map address int : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : big_map address int : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 2;      # @parameter%mintCertificate : big_map address int : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAAR;       # address : big_map address int : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          MEM;        # bool : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          IF
            {}
            {
              # self.data.ownerToBalance[params.address] = 0 # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
              DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
              DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CDR;        # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAR;        # pair (big_map %addressToName address string) (address %admin) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CDR;        # pair (string %name) (big_map %ownerToBalance address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # pair (string %name) (big_map %ownerToBalance address int) : pair (string %name) (big_map %ownerToBalance address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAR;        # string : pair (string %name) (big_map %ownerToBalance address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (string %name) (big_map %ownerToBalance address int) : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CDR;        # big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PUSH (option int) (Some 0); # option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DIG 5;      # @parameter%mintCertificate : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUG 6;      # @parameter%mintCertificate : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              CAAR;       # address : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              UPDATE;     # big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # string : big_map address int : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PAIR;       # pair string (big_map address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (big_map %addressToName address string) (address %admin) : pair string (big_map address int) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PAIR;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DUG 2;      # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              DROP;       # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            }; # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          # self.data.ownerToBalance[params.address] += 1 # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate
          DUG 2;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # pair (big_map %addressToName address string) (address %admin) : pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int)) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # pair (string %name) (big_map %ownerToBalance address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # pair (string %name) (big_map %ownerToBalance address int) : pair (string %name) (big_map %ownerToBalance address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAR;        # string : pair (string %name) (big_map %ownerToBalance address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (string %name) (big_map %ownerToBalance address int) : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CDR;        # big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PUSH int 1; # int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 6;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate
          DUP;        # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate
          DUG 7;      # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CADDR;      # big_map address int : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 6;      # @parameter%mintCertificate : big_map address int : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : big_map address int : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 7;      # @parameter%mintCertificate : big_map address int : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAAR;       # address : big_map address int : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          GET;        # option int : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          IF_SOME
            {
              # of_some: Get-item:38 # @some : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
            }
            {
              PUSH string "Get-item:38"; # string : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
              FAILWITH;   # FAILED
            }; # @some : int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          ADD;        # int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SOME;       # option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DIG 5;      # @parameter%mintCertificate : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUP;        # @parameter%mintCertificate : @parameter%mintCertificate : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 6;      # @parameter%mintCertificate : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          CAAR;       # address : option int : big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          UPDATE;     # big_map address int : string : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # string : big_map address int : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair string (big_map address int) : pair (big_map %addressToName address string) (address %admin) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          SWAP;       # pair (big_map %addressToName address string) (address %admin) : pair string (big_map address int) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int)) : pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          PAIR;       # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DUG 2;      # @parameter%mintCertificate : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))) : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
          DROP 2;     # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair string (big_map address int))) (pair (pair string (big_map address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
        }; # pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
      NIL operation; # list operation : pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string))))
      PAIR;       # pair (list operation) (pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))))
    } # pair (list operation) (pair (pair (pair (big_map %addressToName address string) (address %admin)) (pair (string %name) (big_map %ownerToBalance address int))) (pair (pair (string %symbol) (big_map %tokenHolderToID address (set string))) (pair (big_map string int) (pair (big_map string address) (set string)))));
  
  `)

console.log(p)


 // Entering the NFT to delete it and make the score null
  const result = await conseiljs.TezosNodeWriter.sendContractInvocationOperation(tezosNode, keystore, contractAddress,
           100000, 1000000, '', 10000, 1000000, entryPoints[0].generateInvocationString(
               `"${p.del}"`).entrypoint,
               '(Left '+entryPoints[0].generateInvocationPair(`"${p.del}"`).parameters+')',
               conseiljs.TezosParameterFormat.Michelson);
  console.log(`Injected operation group id ${result.operationGroupID}`);
   
}
// async function pri(p){
//   }
//mintingCertificate()
//console.log(VerifyCertificate("Aakasih-Quiz-30"))
//deleteCertificate()

app.get("/",(req,res)=>{
  res.render("index.ejs")
})

var CerValue
app.post("/verify",(req,res)=>{
VerifyCertificate(req.body.tokenID).then((p)=>{
  console.log(p)
  CerValue=p}).then(
  res.render("result.ejs",{result:CerValue}))
})

app.post("/new",(req,res)=>{
  console.log(req.body)
  mintingCertificate(req.body)
})

app.post("/delete",(req,res)=>{
  console.log(req.body)
deleteCertificate(req.body)
})

app.listen(1200,()=>{console.log("app started")})
